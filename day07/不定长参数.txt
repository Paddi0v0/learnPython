* : 在python3中默认代表乘法的功能.
    如果在形参里面写上 *+变量名 那么此时就代表保存一些特殊值的
    如果在实参里面写上 *+变量名 那么此时就代表拆包
    一个*+变量名,实参代表拆元组或列表
    两个**+变量名,实参则代表拆包字典

    一个*+变量名,形参参代存放多个特殊值,且以元组的方式保存
    两个**+变量名,形参则代表以字典方式保存








def test(a,b,c=33,*args,**kwargs):
    print(a)
    print(b)
    print(c)
    print(args)
    print(kwargs)
test(11,22,33,44,55,66,name=liuyongshuo,age=21)

在这个test函数里面,test(a,b,c=33,*args,**kwargs):
其中a,b代表形参,也就是必须要传递的参数c,代表缺省参数,如果有数据传输给c那么c的值则发生改变,如果没有数据传给c那么c的值就默认是33
*args 表示*+变量名,如果有多余的数据传给*+变量名,那么则都存放在*变量里
    存放的时候以元组的方式存放
**kwargs 表示**+变量名,如果有数据是以name='liuwendnag',age=18,这种'Str'=xxx;    的形式,则默认存放在**变量里面,且以字典的方式保存

此时如果我想传递给args一个元组,传给kwargs一个字典:
A = (44,55,66)or[44,55,66] 这里写列表也可以.
B = {'name':'liuwendang', 'age':18}
test(11,22,33,*A,**B)
传给元组+*,传给字典+**,在这里的*,**则代表拆包,*A把A一个一个拆分,传递给*args,**B把一个一个拆分,传递给**kwargs
