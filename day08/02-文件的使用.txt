文件的读写,
    f = open('test.txt', 'w')
    f只是一个变量,用来接受open的返还值
    f.close() 关闭文件
    test = open('test.txt', 'w')
    test.write('nihao') : 往test.txt这个文件夹里写入了'nihao这个字符串
    test.read() ：读取test里接收的内容
    test.read(1): 默认读取一个字节,如果下次再写test.read(1),则读取上一次读取    的位置的后一个,也就是读出来的后一个
readlines() : 以列表的方式读取一个文件，每一行是列表中的一个元素
readlin() : 一行一行的读取
定位读写: .tell() 告诉你当前要读写的位置，也就是当前文件中指针的位置,一个汉字代表3个字节,一个中文的标点符号也代表3个字节
定位到某个位置:seek(offset,from),offset是偏移量,from,是方向,0代表开头,2代表末尾,1代表当前位置,offset代表微调,如果你想要定位读取的位置离1比较近,那么方向就定位在1，微调在1的左边用负数，在1的右边直接输入字节即可

seek(0,0)代表的指针指向文件的开头的第0个字节,此时如果使用.read(1),则读取的是第一个字节
seek(1,0)此时指针则是指向文件开头的第1个字节,如果此时使用.read(1),则读取的是第一个字节之后的,第二个字节,.tell()显示的也是当前指针所在的位置

r+ write的时候,和'>'是一样的,把里面的内容清空之后,再写入新的内容,在使用r+写入新的内容时,如果要read()里面的内容时,要先把指针指向开头,因为你写入新的内容时,指针已经指向了最末尾了


文本文件的操作:
r : 代表只读文件,只读取
w ：代表如果文件存在，删除其内容,添加新的内容,如果文件不存在,新建文件,并写入相当于 '>'
a : 代表向文件末尾添加内容,如果文件不存在,则建立一个新文件.相当于 '>>'

二进制文件的操作:也就是对视频，图片这种格式的文件进行操作的时候
rb : 二进制的只读
wb : 同上
ab : 同上

文本文件的读写操作:
r+ : 对文本文件进行读写操作,既可以读也可以写
w+ : 对文本文件进行读写操作,如果没有创建新文件,如果有,则清空其内容,重新写入新的内容
a+ ：对文本文件进行读写操作,如果没有创建新文件,如果有,则把新内容,从末尾添加
r+和w+的区别:r+读写的时候文件必须存在，否则程序崩溃,w+则在读写的时候,有则清空再写入新的内容,没有则新建一个文件
